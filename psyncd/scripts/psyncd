#!/usr/bin/env python
# -*- coding: utf-8 -*-

from sys import exit
from typing import List
import argparse
import appdirs
from vprint import vprint

from psyncd.job import SyncJob, JobDict
from psyncd.rsync import InotifyThread, RSyncThread

appdir = appdirs.AppDirs('psyncd')

def job_from_tuple(tup):
    if len(tup) != 2:
        raise ValueError('Must provide pair of values (source, dest)')
    return SyncJob(source=tup[0], dest=tup[1])


def menu():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-j", "--job", nargs=2, action='append', type=str, metavar=('source','dest'),
        help="Tuple of Source and Destfile tree to run, `path` or `host:path`")

    return parser


def main(jobs):
    # type: (List[SyncJob]) -> int
    inotify_threads = {}
    rsync_threads = {}
    job_dict = JobDict()
    print(jobs)
    for job in jobs:
        # this is bad and I feel bad

        inotify_threads[job] = InotifyThread(job_dict, job)
        rsync_threads[job] = RSyncThread(job_dict, job)

    for k, t in inotify_threads.items():
        t.join()

    for k, t in rsync_threads.items():
        t.join()

    return 0


if __name__ == '__main__':
    parser = menu()
    args = parser.parse_args()
    jobs = [job_from_tuple(t) for t in args.job]
    vprint('{}'.format(jobs))
    exit(main(jobs))
